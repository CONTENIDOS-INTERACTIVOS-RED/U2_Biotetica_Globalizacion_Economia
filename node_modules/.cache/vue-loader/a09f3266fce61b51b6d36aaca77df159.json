{"remainingRequest":"/home/runner/work/U2_Biotetica_Globalizacion_Economia/U2_Biotetica_Globalizacion_Economia/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U2_Biotetica_Globalizacion_Economia/U2_Biotetica_Globalizacion_Economia/node_modules/pug-plain-loader/index.js!/home/runner/work/U2_Biotetica_Globalizacion_Economia/U2_Biotetica_Globalizacion_Economia/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U2_Biotetica_Globalizacion_Economia/U2_Biotetica_Globalizacion_Economia/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Biotetica_Globalizacion_Economia/U2_Biotetica_Globalizacion_Economia/src/views/curso/Tema2.vue?vue&type=template&id=036d11d4&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Biotetica_Globalizacion_Economia/U2_Biotetica_Globalizacion_Economia/src/views/curso/Tema2.vue","mtime":1734480545333},{"path":"/home/runner/work/U2_Biotetica_Globalizacion_Economia/U2_Biotetica_Globalizacion_Economia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Biotetica_Globalizacion_Economia/U2_Biotetica_Globalizacion_Economia/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Biotetica_Globalizacion_Economia/U2_Biotetica_Globalizacion_Economia/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Biotetica_Globalizacion_Economia/U2_Biotetica_Globalizacion_Economia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Biotetica_Globalizacion_Economia/U2_Biotetica_Globalizacion_Economia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}